# 1 "lexer.mll"
 
  open Lexing
  open Parser
  exception Error of string

  let next_line lexbuf =
    let pos = lexbuf.lex_curr_p in
    lexbuf.lex_curr_p <-
      { pos with pos_bol = lexbuf.lex_curr_pos;
                 pos_lnum = pos.pos_lnum + 1
      }

# 15 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\228\255\229\255\230\255\231\255\232\255\233\255\234\255\
    \235\255\236\255\237\255\025\000\075\000\029\000\037\000\038\000\
    \101\000\102\000\035\000\092\000\032\000\041\000\253\255\254\255\
    \255\255\025\000\252\255\056\000\056\000\058\000\249\255\072\000\
    \059\000\057\000\086\000\250\255\092\000\104\000\103\000\246\255\
    \107\000\089\000\092\000\248\255\104\000\101\000\247\255\099\000\
    \113\000\239\255\105\000\099\000\103\000\108\000\118\000\245\255\
    \104\000\001\000\108\000\105\000\122\000\240\255\109\000\005\000\
    \120\000\116\000\128\000\127\000\132\000\113\000\244\255\114\000\
    \116\000\007\000\128\000\124\000\136\000\135\000\140\000\121\000\
    \243\255\142\000\130\000\138\000\141\000\002\000\132\000\132\000\
    \148\000\141\000\132\000\133\000\148\000\133\000\137\000\242\255\
    \135\000\145\000\153\000\138\000\143\000\241\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\018\000\017\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\255\255\255\255\
    \255\255\255\255\255\255\004\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\023\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \024\000\058\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\002\000\007\000\009\000\000\000\008\000\000\000\006\000\
    \010\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\000\000\004\000\000\000\005\000\000\000\000\000\
    \000\000\019\000\015\000\013\000\018\000\086\000\017\000\087\000\
    \014\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\020\000\016\000\064\000\021\000\074\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\081\000\071\000\062\000\
    \040\000\027\000\025\000\026\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\028\000\029\000\
    \030\000\036\000\033\000\034\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\050\000\044\000\
    \032\000\035\000\037\000\038\000\039\000\041\000\042\000\045\000\
    \043\000\047\000\031\000\046\000\051\000\048\000\049\000\056\000\
    \052\000\053\000\054\000\055\000\057\000\059\000\060\000\061\000\
    \063\000\065\000\066\000\067\000\068\000\069\000\070\000\072\000\
    \073\000\075\000\076\000\077\000\078\000\079\000\080\000\082\000\
    \083\000\084\000\085\000\096\000\088\000\089\000\090\000\091\000\
    \092\000\093\000\094\000\095\000\097\000\098\000\099\000\100\000\
    \022\000\101\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\057\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\085\000\000\000\085\000\
    \000\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\000\000\000\000\063\000\000\000\073\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\013\000\014\000\015\000\
    \018\000\020\000\021\000\025\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\027\000\028\000\
    \029\000\031\000\032\000\033\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\016\000\017\000\
    \019\000\034\000\036\000\037\000\038\000\040\000\041\000\017\000\
    \042\000\044\000\019\000\045\000\016\000\047\000\048\000\050\000\
    \051\000\052\000\053\000\054\000\056\000\058\000\059\000\060\000\
    \062\000\064\000\065\000\066\000\067\000\068\000\069\000\071\000\
    \072\000\074\000\075\000\076\000\077\000\078\000\079\000\081\000\
    \082\000\083\000\084\000\086\000\087\000\088\000\089\000\090\000\
    \091\000\092\000\093\000\094\000\096\000\097\000\098\000\099\000\
    \000\000\100\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 15 "lexer.mll"
                       ( token lexbuf )
# 186 "lexer.ml"

  | 1 ->
# 16 "lexer.mll"
                       ( next_line lexbuf; token lexbuf )
# 191 "lexer.ml"

  | 2 ->
# 17 "lexer.mll"
                       ( EOF )
# 196 "lexer.ml"

  | 3 ->
# 18 "lexer.mll"
               ( VAR )
# 201 "lexer.ml"

  | 4 ->
# 19 "lexer.mll"
            (SI)
# 206 "lexer.ml"

  | 5 ->
# 20 "lexer.mll"
               (ALORS)
# 211 "lexer.ml"

  | 6 ->
# 21 "lexer.mll"
               (SINON)
# 216 "lexer.ml"

  | 7 ->
# 22 "lexer.mll"
               ( BEGIN )
# 221 "lexer.ml"

  | 8 ->
# 23 "lexer.mll"
               ( END )
# 226 "lexer.ml"

  | 9 ->
# 24 "lexer.mll"
                (AVANCE)
# 231 "lexer.ml"

  | 10 ->
# 25 "lexer.mll"
                (TOURNE)
# 236 "lexer.ml"

  | 11 ->
# 26 "lexer.mll"
                    (BASP)
# 241 "lexer.ml"

  | 12 ->
# 27 "lexer.mll"
                     (HAUTP)
# 246 "lexer.ml"

  | 13 ->
# 28 "lexer.mll"
                         (CHANGEEPAISSEUR)
# 251 "lexer.ml"

  | 14 ->
# 29 "lexer.mll"
                       (CHANGECOULEUR)
# 256 "lexer.ml"

  | 15 ->
# 30 "lexer.mll"
                  (TANTQUE)
# 261 "lexer.ml"

  | 16 ->
# 31 "lexer.mll"
               (FAIRE)
# 266 "lexer.ml"

  | 17 ->
let
# 32 "lexer.mll"
                                            s
# 272 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 32 "lexer.mll"
                                                  ( IDENT s)
# 276 "lexer.ml"

  | 18 ->
let
# 33 "lexer.mll"
                                    i
# 282 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 33 "lexer.mll"
                                       ( NOMBRE (int_of_string i) )
# 286 "lexer.ml"

  | 19 ->
# 34 "lexer.mll"
               ( PLUS )
# 291 "lexer.ml"

  | 20 ->
# 35 "lexer.mll"
           (MINUS)
# 296 "lexer.ml"

  | 21 ->
# 36 "lexer.mll"
           (TIMES)
# 301 "lexer.ml"

  | 22 ->
# 37 "lexer.mll"
           (DIV)
# 306 "lexer.ml"

  | 23 ->
# 38 "lexer.mll"
               ( AFFECT )
# 311 "lexer.ml"

  | 24 ->
# 39 "lexer.mll"
           (SEMICOLON)
# 316 "lexer.ml"

  | 25 ->
# 40 "lexer.mll"
               ( LPARA )
# 321 "lexer.ml"

  | 26 ->
# 41 "lexer.mll"
               ( RPARA )
# 326 "lexer.ml"

  | 27 ->
# 42 "lexer.mll"
               ( raise (Error (Lexing.lexeme lexbuf)) )
# 331 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

